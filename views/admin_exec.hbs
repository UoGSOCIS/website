{{!< layouts/default}}
{{! The tag above means - insert everything in this file into the {content} of the main.hbs template }}

<form class="container exec">
    <div class="form-group form-box padding-top-40">
        <div class="row">
            <div class="col-12 padding-left-15">
                <label for="email">Year:</label>
            </div>
            <div class="col-12 col-sm-6 col-md-3">
                <select name="year" id="year" class="form-control">
                </select>
            </div>
        </div>

        <div class="row padding-top-20">
            <div class="col-12 padding-left-15">
                <label name="role" for="email">Role:</label>
            </div>
            <div class="col-12 col-sm-6 col-md-3">
                <select name="role" id="role" onchange="changeRole(this.options[this.selectedIndex])"
                    class="form-control">
                    {{#each roles}}
                    <option value="{{this.value}}">{{this.name}}</option>
                    {{/each}}
                </select>
            </div>
        </div>

    </div>
</form>

<div class="container">
    <h3>Current Execs</h3>
    <div class="padding-left-20 padding-right-20">
        <table class="table table-striped margin-bottom-0">
            <thead>
                <tr>
                    <th width="20%" scope="col">Position</th>
                    <th width="20%" scope="col">Email</th>
                    <th width="30%" scope="col">Name</th>
                    <th width="15%" scope="col">Action</th>
                </tr>
            </thead>
            <tbody id="mainTable" >
                {{#each currentExec}}
                <tr id="currentExecRoster" >
                    <td class="padding-top-10">{{this.role}}</td>
                    <td id="currentExecEmail"><span>{{this.email}}</span></td>
                    <td id="currentExecName"><span>{{this.name}}</span></td>
                    <td class="centered">
                        <div id="edit" class="action-btn padding-top-0" onclick="editRow(this.parentElement.parentElement)">
                            <span>Edit</span>
                        </div>
                        <div id="buttons" class="button-group" style="display:none">
                            <button class="cancel" onclick="cancelEdit(this.parentElement.parentElement.parentElement)">Cancel</button>
                            <button class="save">Save</button>
                        </div>
                        <div id="remove" class="action-btn remove padding-top-15"
                            onclick="removeExec(this.parentNode.parentNode)" 
                            style="display:none">
                        <span class="fas fa-minus-circle"></span>
                        <span>Remove</span>
                    </div>
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>
        <div class="action-btn add padding-10" onclick="openCreateExecModal()">
            <span class="fas fa-plus-circle"></span>
            <span>Add New Exec</span>
        </div>
    </div>

</div>
<script type="text/javascript">
    window.onload = load;
    var execForm;
    var execList;

    function load() {
        var spinner = document.getElementById("year");
        var currentYear = new Date().getFullYear();

        for (var i = currentYear - 3; i < currentYear + 3; i++) {
            var option = document.createElement("option");

            if (i === currentYear) {
                option.selected = true;
            }
            option.value = i;
            option.innerText = i;

            spinner.add(option);
        }
    }

    function changeRole(spinner) {
        document.getElementById("newExecRole").innerHTML = spinner.innerText;
    }

    function closeCreateExecModal() {
        var lastRow = $("table > tbody > tr:last");
        lastRow.remove();
        var addBtn = $(".action-btn.cancel");
        addBtn[0].innerHTML = "<span class=\"fas fa-plus-circle\"></span><span>Add New Exec</span>"
        addBtn[0].classList.replace("cancel", "add");
        addBtn[0].onclick = openCreateExecModal;
    }

    function openCreateExecModal() {
        var lastRow = $("table > tbody > tr:last");
        lastRow.after(
            "<tr>" + 
                "<td class=\"padding-top-10\">" + 
                    "<span id=\"newExecRole\">{{initialRole.name}}</span>" + 
                "</td>" + 
                "<td><input id=\"newExecEmail\" class=\"form-control\" type=\"text\" value=\"{{emailDomain}}\"></td>" + 
                "<td><input id=\"newExecName\" class=\"form-control\" type=\"text\"></td>" + 
                "<td>" + 
                    "<div class=\"button-group\">" + 
                    "</div>" + 
                "</td>" + 
            "</tr>"
        );
        var addBtn = $(".action-btn.add");
        console.log(addBtn[0]);
        addBtn[0].innerHTML = "<span>Cancel</span>";
        addBtn[0].classList.replace("add", "cancel");
        addBtn[0].onclick = closeCreateExecModal;
    }

    function createExec() {
        var exec = {
            name: document.getElementById("newExecName").value,
            email: document.getElementById("newExecEmail").value,
            year: document.getElementById("year").value,
            role: $("#role option:selected")[0].value
        };

        var currExecRostEmails = document.querySelectorAll("tr#currentExecRoster > td#currentExecEmail > input");
        var duplicateExec = false;

        for (var i = 0; i < currExecRostEmails.length; i++) {
            var emailValue = currExecRostEmails[i].getAttribute("value");
            if (emailValue === exec.email) {
                console.error("Duplicate Email!");
                return;
            }
        }

        // upload the post and the attachments here

        if (!duplicateExec) {
            $.ajax({
                url: "/admin/exec",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify(exec),
                complete: function (xhr, status) {

                    var responseCode = xhr.status;

                    if (responseCode === 201) {
                        var response = JSON.parse(xhr.responseText);
                        uploadFilesForPost(response);
                        return;
                    } else if (responseCode === 200) {
                        return;
                    }

                    alert("error! " + response.message);
                },
            });
        }
    }

    function editRow(row) {
        var name = row.querySelector("td#currentExecName");
        var email = row.querySelector("td#currentExecEmail");
        name.innerHTML = "<input type=\"text\" class=\"form-control\" value=\"" + name.querySelector("span").innerText + "\">";
        email.innerHTML = "<input type=\"text\" class=\"form-control\" value=\"" + email.querySelector("span").innerText + "\">";
        // row.querySelector("td > div#remove").style.display = "inline-block";
        row.querySelector("td > div#buttons").style.display = "inline-table";
        row.querySelector("td > div#edit").style.display = "none";


    }

    function cancelEdit(row) {
        var name = row.querySelector("td#currentExecName");
        var email = row.querySelector("td#currentExecEmail");
        name.innerHTML = "<span>" + name.querySelector("input").value + "<span>";
        email.innerHTML = "<span>" + email.querySelector("input").value + "<span>";   
        row.querySelector("td > div#edit").style.display = "initial";
        row.querySelector("td > div#buttons").style.display = "none";
        row.querySelector("td > div#remove").style.display = "none";
    }

    function removeExec(exec) {
        exec.parentNode.removeChild(exec);
        /* $.ajax({
            url: "/admin/exec/execId:",
            type: "DELETE",
            data:

        }); */
    }

</script>